{"version":3,"sources":["components/Global/Header/Header.jsx","components/Global/Informer/Informer.jsx","components/Global/GlobalParent/GlobalParent.jsx","constants/keyboard.js","services/Vkey/Vkey.js","components/Elements/ModuleNav/ModuleNav.jsx","constants/keys.js","components/Global/Table/Table.jsx","services/Covid19DataAPI.js","components/Global/Map/Map.jsx","components/Global/Current/Current.jsx","constants/keysForCharts.js","components/Global/Charts/Charts.jsx","components/App/App.jsx","index.js","assets/images/sprite.svg","assets/images/rs-logo.svg"],"names":["Header","props","state","appTitle","this","className","src","rsLogo","alt","Component","Informer","totalCases","totalDeaths","totalRecovered","date","Date","getDate","getMonth","getFullYear","toLocaleString","GlobalParent","containerClassName","navItems","navCurrentItems","toggleContainerClassName","bind","toggleNavItem","data","setState","param","type","name","keycode","width","symbol","caps","icon","Vkey","textAreaNode","document","querySelector","initConstants","REGISTR","STORE","CAPS","CTRL","ALT","LANG","VKEY","VKEYBody","WidthRatio","ShiftCallBack","appFunctionsKeys","CAPSReactsButtons","textAreaNodeFontSize","SoundSetting","recognition","microphoneKeyButton","microphoneRecordingLoader","createVkeyInBody","addAppEventListeners","keyArg","key","soundKeys","findIndex","el","audio","Audio","toLowerCase","play","createElement","classList","add","innerHTML","sprite","body","appendChild","keyboardRows","getVkeyRows","result","createDocumentFragment","KEYBOARD","forEach","row","rowDivR","btn","getVkeyButton","innerHtml","i","span","innerText","buttonS","setAttribute","push","addEventListener","playSound","getCurrentKeyboardLayout","checkSymbol","changeTextAreaNodeFontSize","saveAreaNodeFocus","changeAlt","runCtrlFunctions","smb","res","toUpperCase","reverseRegistr","changeAreaNodeValue","buttonF","innerHtmlF","spanF","window","innerWidth","style","setVkeyFunctionButtonsActions","str","length","console","log","cursorPositionStart","selectionStart","cursorPositionEnd","selectionEnd","pasteText","text","after","value","slice","before","setSelectionPosition","navigator","clipboard","writeText","catch","err","readText","then","alert","changeCtrl","delta","cursorPosition","prevValue","nextValue","focus","cb","flag","Shift","toggle","toggleRegistr","changeCapsReactsButtons","rows","split","pos","rowsBefore","rowsAfter","adPos","length1","rAfter","start","endPos","end","Alt","remove","Ctrl","btnCRB","children","Caps","stop","timerId","setTimeout","clearTimeout","SpeechRecognition","webkitSpeechRecognition","lang","continuous","onresult","event","results","resultIndex","transcript","onend","stopRecognizer","soundKeyButton","startRecognizer","e","contains","querySelectorAll","keyCode","preventDefault","currentKeyboardLayout","ModuleNav","isFull","menuIsOpen","nuvCurrentItems","openInputDropdown","searchCountryString","handlerInput","getCurrentListCountries","hasInput","vkey","VKey","init","target","toggleInputDropdown","currentList","changeCurrentCountry","countries","filter","country","includes","id","groupId","idx","closest","removeEventListener","closeMenu","toggleFullWin","close","cbChangeCurrentCountry","fullIcon","menuWrapperClassName","inputDropdownClassName","createOneListInnerContent","toString","separatorItem","onClick","toggleCurrentMenuItem","menuItem","menuNavListsContent","map","groupe","menuOneList","toggleMenu","height","href","placeholder","onChange","onFocus","onKeyDown","handlerInputKeyDown","item","getListOfCountries","defaultProps","cases","deaths","recovered","Table","toggleCurrentCountry","prevProps","countryInfo","elem","iso3","scrollIntoView","behavior","keySort","sort","a","b","nameCountry","clickByCountry","keys","population","getCurrentDataOnKeys","getTableContent","Covid19DataAPI","covidData","axios","create","baseURL","get","summary","countryList","historyData","historyDataCountry","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","purpleOptions","color","fillColor","fillOpacity","weight","Map","onEachFeature","feature","layer","countryFocus","find","on","mouseover","sourceTarget","setStyle","mouseout","bindTooltip","properties","direction","permanent","sticky","offset","clickToFeature","geodatas","euCountries","lat","lng","zoom","covidDataAPI","getCountryList","setNewPosition","long","RenderCircle","keysPerMillion","colors","Circle","center","pathOptions","radius","eventHandlers","click","Tooltip","MapContainer","scrollWheelZoom","TileLayer","attribution","url","GeoJSON","renderMap","Current","currentTableRows","count","undefined","getCurrentRow","getPopulationRow","getCountryFlagRow","label","backgroundColor","borderColor","Charts","title","history","getHistoryCountry","resp","timeline","getHistoryGlobal","chartCurrentData","Object","entries","keysForCharts","labels","datasets","fill","getChartData","options","tooltips","callbacks","tooltipItem","Intl","NumberFormat","format","yLabel","scales","yAxes","ticks","beginAtZero","callback","xAxes","time","tooltipFormat","displayFormats","day","BarChart","propTypes","PropTypes","objectOf","object","App","getSummaryWorld","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5f1101a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport rsLogo from '../../../assets/images/rs-logo.svg';\nimport './Header.scss';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appTitle:\n        'COVID-19 Dashboard by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU)',\n    };\n  }\n\n  render() {\n    const { appTitle } = this.state;\n    return (\n      <header className=\"header\">\n        <div className=\"header__container\">\n          <div className=\"header__logo\">\n            <img\n              src={rsLogo}\n              className=\"header__logo-img\"\n              alt=\"RS School logotype\"\n            />\n          </div>\n          <div className=\"header__title\">{appTitle}</div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Informer.scss';\n\nconst Informer = (props) => {\n  const { totalCases, totalDeaths, totalRecovered } = props;\n  const date = new Date();\n  return (\n    <div className=\"informer\">\n      <div className=\"informer__container\">\n        <div className=\"informer__row informer__row--center\">\n          <span>\n            {`${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`}\n          </span>\n        </div>\n        <div className=\"informer__row\">\n          Total cases:&nbsp;\n          <span>{totalCases.toLocaleString()}</span>\n        </div>\n        <div className=\"informer__row\">\n          Total deaths:&nbsp;\n          <span>{totalDeaths.toLocaleString()}</span>\n        </div>\n        <div className=\"informer__row\">\n          Total recovered:&nbsp;\n          <span>{totalRecovered.toLocaleString()}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInformer.propTypes = {\n  totalCases: PropTypes.number.isRequired,\n  totalDeaths: PropTypes.number.isRequired,\n  totalRecovered: PropTypes.number.isRequired,\n};\n\nexport default Informer;\n","// import React, { Component } from 'react';\nimport { Component } from 'react';\n// import ModuleNav from '../../Elements/ModuleNav/ModuleNav';\n\nclass GlobalParent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      containerClassName: '',\n      navItems: [\n        ['Params 1 group 1', 'Params 2 group 1'],\n        ['Params 1 group 2', 'Params 2 group 2'],\n      ],\n      navCurrentItems: [0, 0],\n    };\n    this.toggleContainerClassName = this.toggleContainerClassName.bind(this);\n    this.toggleNavItem = this.toggleNavItem.bind(this);\n  }\n\n  toggleNavItem(data) {\n    this.setState({ navCurrentItems: data });\n  }\n\n  toggleContainerClassName(param) {\n    this.setState({ containerClassName: param ? 'is-open-full' : '' });\n  }\n}\n\nexport default GlobalParent;\n","export default [\n  [\n    { type: 'fkey', name: 'Esc', keycode: 27, width: 60 },\n    { type: 'symbol', symbol: '`~ёЁ', keycode: 192, caps: true },\n    { type: 'number', symbol: '1!1!', keycode: 49 },\n    { type: 'number', symbol: '2@2\"', keycode: 50 },\n    { type: 'number', symbol: '3#3№', keycode: 51 },\n    { type: 'number', symbol: '4$4;', keycode: 52 },\n    { type: 'number', symbol: '5%5%', keycode: 53 },\n    { type: 'number', symbol: '6^6:', keycode: 54 },\n    { type: 'number', symbol: '7&7?', keycode: 55 },\n    { type: 'number', symbol: '8*8*', keycode: 56 },\n    { type: 'number', symbol: '9(9(', keycode: 57 },\n    { type: 'number', symbol: '0)0)', keycode: 48 },\n    { type: 'number', symbol: '-_-_', keycode: 189 },\n    { type: 'number', symbol: '=+=+', keycode: 187 },\n    { type: 'fkey', icon: 'backspace', keycode: 8, width: 120 },\n  ],\n  [\n    { type: 'fkey', keycode: 9, name: 'Tab', width: 90 },\n    { type: 'symbol', symbol: 'qQйЙ', keycode: 81, caps: true },\n    { type: 'symbol', symbol: 'wWцЦ', keycode: 87, caps: true },\n    { type: 'symbol', symbol: 'eEуУ', keycode: 69, caps: true },\n    { type: 'symbol', symbol: 'rRкК', keycode: 82, caps: true },\n    { type: 'symbol', symbol: 'tTеЕ', keycode: 84, caps: true },\n    { type: 'symbol', symbol: 'yYнН', keycode: 89, caps: true },\n    { type: 'symbol', symbol: 'uUгГ', keycode: 85, caps: true },\n    { type: 'symbol', symbol: 'iIшШ', keycode: 73, caps: true },\n    { type: 'symbol', symbol: 'oOщЩ', keycode: 79, caps: true },\n    { type: 'symbol', symbol: 'pPзЗ', keycode: 80, caps: true },\n    { type: 'symbol', symbol: '[{хХ', keycode: 219, caps: true },\n    { type: 'symbol', symbol: ']}ъЪ', keycode: 221, caps: true },\n    { type: 'symbol', symbol: '\\\\|\\\\|', keycode: 220 },\n    { type: 'fkey', name: 'Del', keycode: 46, width: 60 },\n  ],\n  [\n    { type: 'fkey', name: 'Caps', keycode: 20, width: 120 },\n    { type: 'symbol', symbol: 'aAфФ', keycode: 65, caps: true },\n    { type: 'symbol', symbol: 'sSыЫ', keycode: 83, caps: true },\n    { type: 'symbol', symbol: 'dDвВ', keycode: 68, caps: true },\n    { type: 'symbol', symbol: 'fFаА', keycode: 70, caps: true },\n    { type: 'symbol', symbol: 'gGпП', keycode: 71, caps: true },\n    { type: 'symbol', symbol: 'hHрР', keycode: 72, caps: true },\n    { type: 'symbol', symbol: 'jJоО', keycode: 74, caps: true },\n    { type: 'symbol', symbol: 'kKлЛ', keycode: 75, caps: true },\n    { type: 'symbol', symbol: 'lLдД', keycode: 76, caps: true },\n    { type: 'symbol', symbol: ';:жЖ', keycode: 186, caps: true },\n    { type: 'symbol', symbol: '\\'\"эЭ', keycode: 222, caps: true },\n    { type: 'fkey', name: 'Enter', keycode: 13, width: 120.5 },\n  ],\n  [\n    { type: 'fkey', name: 'Shift', keycode: 16, width: 150 },\n    { type: 'symbol', symbol: 'zZяЯ', keycode: 90, caps: true },\n    { type: 'symbol', symbol: 'xXчЧ', keycode: 88, caps: true },\n    { type: 'symbol', symbol: 'cCсС', keycode: 67, caps: true },\n    { type: 'symbol', symbol: 'vVмМ', keycode: 86, caps: true },\n    { type: 'symbol', symbol: 'bBиИ', keycode: 66, caps: true },\n    { type: 'symbol', symbol: 'nNтТ', keycode: 78, caps: true },\n    { type: 'symbol', symbol: 'mMьЬ', keycode: 77, caps: true },\n    { type: 'symbol', symbol: ',<бБ', keycode: 188, caps: true },\n    { type: 'symbol', symbol: '.>юЮ', keycode: 190, caps: true },\n    { type: 'symbol', symbol: '/?.,', keycode: 191 },\n    { type: 'fkey', icon: 'arrow-up', keycode: 38, width: 60 },\n    { type: 'fkey', name: 'Shift', keycode: 16, width: 121 },\n  ],\n  [\n    { type: 'fkey', name: 'Ctrl', keycode: 17, width: 100 },\n    { type: 'fkey', name: 'Alt', keycode: 18, width: 80 },\n    { type: 'fkey', name: ['en', 'EN', 'ru', 'RU'], width: 60 },\n    { type: 'symbol', symbol: '    ', keycode: 32 },\n    { type: 'fkey', icon: 'arrow-left', keycode: 37, width: 60 },\n    { type: 'fkey', icon: 'arrow-down', keycode: 40, width: 60 },\n    { type: 'fkey', icon: 'arrow-right', keycode: 39, width: 60 },\n    { type: 'fkey', name: 'End', keycode: 35, width: 58 },\n  ],\n];\n","import KEYBOARD from '../../constants/keyboard';\nimport sprite from '../../assets/images/sprite.svg';\n\nexport default class Vkey {\n  constructor(textAreaNode) {\n    this.textAreaNode = document.querySelector(textAreaNode);\n    this.initConstants();\n  }\n\n  initConstants() {\n    this.REGISTR = 0; // 0 - нижний, 1 - верхний\n    this.STORE = [];\n    this.CAPS = false;\n    this.CTRL = false;\n    this.ALT = false;\n    this.LANG = 'en';\n    this.VKEY = null;\n    this.VKEYBody = null;\n    this.WidthRatio = [0.75, 1];\n    this.ShiftCallBack = null;\n    this.appFunctionsKeys = {};\n    this.CAPSReactsButtons = [];\n    this.textAreaNodeFontSize = 17;\n    this.SoundSetting = false;\n    this.recognition = null;\n    this.microphoneKeyButton = null;\n    this.microphoneRecordingLoader = null;\n  }\n\n  init() {\n    this.createVkeyInBody();\n    this.addAppEventListeners();\n  }\n\n  playSound(keyArg = 'default') {\n    let key = keyArg;\n    if (!this.SoundSetting) return false;\n    const soundKeys = ['Shift', 'Caps', 'backspace', 'Enter', 'default', 'Del'];\n    if (key) {\n      if (soundKeys.findIndex((el) => el === key) === -1) key = 'default';\n      const audio = new Audio(\n        `./assets/audio/sound_${this.LANG}_${key.toLowerCase()}.mp3`\n      );\n      audio.play();\n    }\n    return this;\n  }\n\n  createVkeyInBody() {\n    this.VKEY = document.createElement('div');\n    this.VKEY.classList.add('vkey');\n    this.VKEY.innerHTML = `<div class=\"vkey__wrapper\">\n        <header class=\"vkey__header\">\n          <div class=\"vkey__button vkey__button-service\">\n            <svg width=\"20\" height=\"20\">\n              <use href=\"${sprite}#settings\" />\n            </svg>\n          </div>\n          <div class=\"vkey__button vkey__button-service vkey__button-service--audio\" title=\"Включить / отключить звук нажатия клавиатуры\">\n            <svg width=\"20\" height=\"20\">\n              <use xlink:href=\"${sprite}#audio-off\" />\n            </svg>\n            <svg width=\"20\" height=\"20\">\n              <use xlink:href=\"${sprite}#audio\" />\n            </svg>\n          </div>\n          <div class=\"vkey__button vkey__button-service vkey__button-service--microphone\" title=\"Голосовой набор не включен. Нажмите для включения.\">\n            <svg width=\"20\" height=\"20\">\n              <use xlink:href=\"${sprite}#microphone-off\" />\n            </svg>\n            <svg width=\"20\" height=\"20\">\n              <use xlink:href=\"${sprite}#microphone\" />\n            </svg>\n          </div>\n          <div class=\"vkey__recording\"></div>\n          <div class=\"vkey__button vkey__button-service vkey__button-close\">\n            <svg width=\"20\" height=\"20\">\n              <use xlink:href=\"${sprite}#close\" />\n            </svg>\n          </div>\n        </header>\n        <div class=\"vkey__body\" data-symbol=\"0\" data-caps=\"false\"></div>\n      </div>`;\n    document.body.appendChild(this.VKEY);\n    const keyboardRows = this.getVkeyRows();\n    this.VKEYBody = this.VKEY.querySelector('.vkey__body');\n    this.VKEYBody.appendChild(keyboardRows);\n  }\n\n  getVkeyRows() {\n    const result = document.createDocumentFragment();\n    KEYBOARD.forEach((row) => {\n      const rowDivR = document.createElement('div');\n      rowDivR.classList.add('vkey__row');\n      row.forEach((btn) => {\n        rowDivR.appendChild(this.getVkeyButton(btn));\n      });\n      result.appendChild(rowDivR);\n    });\n    return result;\n  }\n\n  getVkeyButton(btn) {\n    const reverseRegistr = (smb) => {\n      let res;\n      if (smb === smb.toUpperCase()) res = smb.toLowerCase();\n      if (smb === smb.toLowerCase()) res = smb.toUpperCase();\n      return res;\n    };\n    switch (btn.type) {\n      case 'symbol':\n      case 'number':\n        const innerHtml = document.createDocumentFragment();\n        for (let i = 0; i < 4; i += 1) {\n          const span = document.createElement('span');\n          span.innerText = btn.symbol[i];\n          innerHtml.appendChild(span);\n        }\n        const buttonS = document.createElement('div');\n        buttonS.appendChild(innerHtml);\n        buttonS.classList.add(\n          'vkey__button',\n          btn.type === 'symbol' ? 'vkey__button-symbol' : 'vkey__button-number'\n        );\n        if (btn.caps) {\n          buttonS.setAttribute('data-reacts', 'caps');\n          this.CAPSReactsButtons.push(buttonS);\n        }\n        if (btn.keycode) buttonS.setAttribute('data-keycode', btn.keycode);\n        buttonS.addEventListener('click', () => {\n          this.playSound('default');\n          let symbol = btn.symbol[this.getCurrentKeyboardLayout()];\n          if (this.ALT) {\n            if (this.checkSymbol('-_=+', symbol)) {\n              this.changeTextAreaNodeFontSize(\n                symbol === '+' || symbol === '=' ? 1 : -1\n              );\n              this.saveAreaNodeFocus();\n              // return false;\n            } else this.changeAlt();\n          }\n          if (this.CTRL) {\n            this.runCtrlFunctions(symbol);\n          } else {\n            if (this.CAPS) symbol = reverseRegistr(symbol);\n            this.changeAreaNodeValue(symbol);\n            if (this.ShiftCallBack) this.ShiftCallBack(null);\n          }\n        });\n        return buttonS;\n      case 'fkey':\n        const buttonF = document.createElement('div');\n        buttonF.classList.add('vkey__button', 'vkey__button-functionaly');\n        if (typeof btn.name === 'object') {\n          const innerHtmlF = document.createDocumentFragment();\n          for (let i = 0; i < 4; i += 1) {\n            const spanF = document.createElement('span');\n            spanF.innerText = btn.name[i];\n            innerHtmlF.appendChild(spanF);\n          }\n          buttonF.appendChild(innerHtmlF);\n          buttonF.classList.add('vkey__button-functionaly--multy');\n        } else {\n          const icon = btn.icon\n            ? `<svg width=\"20\" height=\"20\">\n                <use xlink:href=\"${sprite}#${btn.icon}\" />\n              </svg>`\n            : '';\n          const name = btn.name ? `<span>${btn.name}</span>` : '';\n          buttonF.innerHTML = icon + name;\n        }\n        if (btn.width) {\n          const key = window.innerWidth < 768 ? 0 : 1;\n          buttonF.style.width = `${this.WidthRatio[key] * btn.width} px`;\n        }\n        if (btn.keycode) buttonF.setAttribute('data-keycode', btn.keycode);\n        let key = btn.name || btn.icon;\n        if (!this.appFunctionsKeys[key]) this.appFunctionsKeys[key] = [];\n        this.appFunctionsKeys[key].push(buttonF);\n        buttonF.addEventListener('click', () => {\n          if (typeof key === 'object') key = 'lang';\n          this.setVkeyFunctionButtonsActions(key);\n          this.playSound(key);\n        });\n        return buttonF;\n      default:\n        break;\n    }\n    return this;\n  }\n\n  checkSymbol(str, symbol) {\n    let res = false;\n    for (let i = 0; i < str.length; i += 1) {\n      if (symbol === str[i]) {\n        res = true;\n        break;\n      }\n    }\n    // eslint-disable-next-line no-console\n    console.log('getHistoryGlobal', this.ALT);\n    return res;\n  }\n\n  runCtrlFunctions(symbol) {\n    const cursorPositionStart = this.textAreaNode.selectionStart;\n    const cursorPositionEnd = this.textAreaNode.selectionEnd;\n\n    const pasteText = (text) => {\n      const after = this.textAreaNode.value.slice(0, cursorPositionStart);\n      const before = this.textAreaNode.value.slice(cursorPositionEnd);\n      this.textAreaNode.value = after + text + before;\n      this.setSelectionPosition(cursorPositionEnd + text.length);\n    };\n\n    if (this.checkSymbol('cCсС', symbol) || this.checkSymbol('xXчЧ', symbol)) {\n      const data = this.textAreaNode.value.slice(\n        cursorPositionStart,\n        cursorPositionEnd\n      );\n      if (!data) return false;\n      this.STORE.push(data);\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(data).catch((err) => {\n          // eslint-disable-next-line no-console\n          console.log('Something went wrong', err);\n        });\n      }\n      if (this.checkSymbol('xXчЧ', symbol)) pasteText('');\n    }\n    if (this.checkSymbol('vVмМ', symbol)) {\n      if (navigator.clipboard && navigator.clipboard.readText) {\n        navigator.clipboard\n          .readText()\n          .then((text) => {\n            pasteText(text);\n          })\n          .catch(() => {\n            // eslint-disable-next-line no-alert\n            alert(\n              'Нет разрешения на данную операцию. Воспользуйтесь физической клавиатурой'\n            );\n          });\n      } else if (this.STORE.length > 0) {\n        pasteText(this.STORE[this.STORE.length - 1]);\n      }\n    }\n    if (this.checkSymbol('-_=+', symbol)) {\n      this.changeTextAreaNodeFontSize(\n        symbol === '+' || symbol === '=' ? 2 : -2\n      );\n    }\n    this.changeCtrl();\n    return this;\n  }\n\n  changeTextAreaNodeFontSize(delta) {\n    this.textAreaNodeFontSize += delta;\n    this.textAreaNode.setAttribute(\n      'style',\n      `--fz: ${this.textAreaNodeFontSize}px`\n    );\n  }\n\n  changeAreaNodeValue(symbol = null, delta = 0) {\n    const cursorPosition = this.textAreaNode.selectionStart;\n    if (symbol) {\n      const prevValue = this.textAreaNode.value.slice(0, cursorPosition);\n      const nextValue = this.textAreaNode.value.slice(cursorPosition);\n      this.textAreaNode.value = prevValue + symbol + nextValue;\n    }\n    this.textAreaNode.focus();\n    if (delta === 0) {\n      this.textAreaNode.selectionEnd =\n        cursorPosition + (symbol ? symbol.length : delta);\n    } else if (this.REGISTR === 0) {\n      if (this.textAreaNode.selectionStart === 0 && delta === -1) return false;\n      this.setSelectionPosition(\n        this.textAreaNode.selectionEnd,\n        cursorPosition + (symbol ? symbol.length : delta)\n      );\n    } else if (delta > 0) {\n      this.textAreaNode.selectionEnd += delta;\n    } else if (this.textAreaNode.selectionStart > 0) {\n      this.textAreaNode.selectionStart += delta;\n    }\n    return this;\n  }\n\n  saveAreaNodeFocus() {\n    const cursorPositionStart = this.textAreaNode.selectionStart;\n    const cursorPositionEnd = this.textAreaNode.selectionEnd;\n    this.textAreaNode.focus();\n    this.textAreaNode.selectionStart = cursorPositionStart;\n    this.textAreaNode.selectionEnd = cursorPositionEnd;\n  }\n\n  toggleRegistr(cb, flag = true) {\n    this.REGISTR = (this.REGISTR + 1) % 2;\n    this.VKEYBody.setAttribute('data-symbol', this.getCurrentKeyboardLayout());\n    if (cb) this.ShiftCallBack = cb;\n    if (flag) {\n      this.appFunctionsKeys.Shift.forEach((btn) => {\n        btn.classList.toggle('active');\n      });\n    }\n    if (this.REGISTR === 0) this.ShiftCallBack = null;\n  }\n\n  setVkeyFunctionButtonsActions(key) {\n    const cursorPositionStart = this.textAreaNode.selectionStart;\n    const cursorPositionEnd = this.textAreaNode.selectionEnd;\n    switch (key) {\n      case 'Esc':\n        if (this.ALT) this.changeAlt();\n        if (this.REGISTR === 1 && !!this.ShiftCallBack) this.toggleRegistr();\n        if (this.CTRL) this.changeCtrl();\n        if (this.CAPS) this.changeCapsReactsButtons();\n        this.saveAreaNodeFocus();\n        break;\n      case 'Shift':\n        this.toggleRegistr(!this.ShiftCallBack ? this.toggleRegistr : null);\n        this.saveAreaNodeFocus();\n        break;\n      case 'lang':\n        this.LANG = this.LANG === 'en' ? 'ru' : 'en';\n        this.VKEYBody.setAttribute(\n          'data-symbol',\n          this.getCurrentKeyboardLayout()\n        );\n        this.saveAreaNodeFocus();\n        break;\n      case 'Caps':\n        this.changeCapsReactsButtons();\n        this.saveAreaNodeFocus();\n        break;\n      case 'Enter':\n        if (cursorPositionStart !== cursorPositionEnd) {\n          let result = '';\n          result =\n            this.textAreaNode.value.slice(0, cursorPositionStart) +\n            this.textAreaNode.value.slice(cursorPositionEnd);\n          this.textAreaNode.value = result;\n          this.setSelectionPosition(cursorPositionStart);\n        }\n        this.changeAreaNodeValue('\\n');\n        break;\n      case 'arrow-left':\n        this.changeAreaNodeValue(null, -1);\n        break;\n      case 'arrow-right':\n        this.changeAreaNodeValue(null, 1);\n        break;\n      case 'arrow-up':\n        const rows = this.textAreaNode.value\n          .slice(0, cursorPositionStart)\n          .split('\\n');\n        let pos = 0;\n        if (rows.length > 1) {\n          if (rows[rows.length - 2].length > rows[rows.length - 1].length) {\n            pos = cursorPositionStart - rows[rows.length - 2].length - 1;\n          } else pos = cursorPositionStart - rows[rows.length - 1].length - 1;\n        }\n        this.setSelectionPosition(\n          pos,\n          this.REGISTR === 1 ? cursorPositionEnd : null\n        );\n        break;\n      case 'arrow-down':\n        const rowsBefore = this.textAreaNode.value\n          .slice(0, cursorPositionEnd)\n          .split('\\n');\n        const rowsAfter = this.textAreaNode.value\n          .slice(cursorPositionEnd)\n          .split('\\n');\n        let adPos = this.textAreaNode.value.length;\n        if (rowsAfter.length > 1) {\n          const length1 = rowsBefore[rowsBefore.length - 1].length;\n          if (length1 > rowsAfter[1].length) {\n            adPos =\n              cursorPositionEnd + rowsAfter[0].length + rowsAfter[1].length + 1;\n          } else adPos = cursorPositionEnd + rowsAfter[0].length + length1 + 1;\n        }\n        if (this.REGISTR === 1) {\n          this.setSelectionPosition(cursorPositionStart, adPos);\n        } else this.setSelectionPosition(adPos);\n\n        break;\n      case 'End':\n        const rAfter = this.textAreaNode.value\n          .slice(cursorPositionEnd)\n          .split('\\n');\n        this.setSelectionPosition(\n          this.textAreaNode.value.slice(0, cursorPositionEnd).length +\n            rAfter[0].length\n        );\n        break;\n      case 'Ctrl':\n        this.changeCtrl();\n        break;\n      case 'Alt':\n        this.changeAlt();\n        break;\n      case 'Tab':\n        this.changeAreaNodeValue('\\t');\n        break;\n      case 'backspace':\n      case 'Del':\n        const delta = key === 'backspace' ? -1 : 0;\n        if (cursorPositionStart !== cursorPositionEnd) {\n          this.textAreaNode.value =\n            this.textAreaNode.value.slice(0, cursorPositionStart) +\n            this.textAreaNode.value.slice(cursorPositionEnd);\n          this.setSelectionPosition(cursorPositionStart, cursorPositionEnd);\n        } else {\n          this.textAreaNode.value =\n            this.textAreaNode.value.slice(0, cursorPositionStart + delta) +\n            this.textAreaNode.value.slice(cursorPositionEnd + 1 + delta);\n          this.setSelectionPosition(\n            cursorPositionStart + delta,\n            cursorPositionEnd + delta\n          );\n        }\n        this.saveAreaNodeFocus();\n        break;\n      default:\n        break;\n    }\n  }\n\n  setSelectionPosition(start = 0, endPos) {\n    let end = endPos;\n    if (!end) end = start;\n    this.textAreaNode.selectionStart = start;\n    this.textAreaNode.selectionEnd = end;\n    this.saveAreaNodeFocus();\n  }\n\n  changeAlt() {\n    this.ALT = !this.ALT;\n    if (this.ALT) this.appFunctionsKeys.Alt[0].classList.add('active');\n    else this.appFunctionsKeys.Alt[0].classList.remove('active');\n    this.saveAreaNodeFocus();\n  }\n\n  changeCtrl() {\n    this.CTRL = !this.CTRL;\n    if (this.CTRL) this.appFunctionsKeys.Ctrl[0].classList.add('active');\n    else this.appFunctionsKeys.Ctrl[0].classList.remove('active');\n    this.saveAreaNodeFocus();\n  }\n\n  changeCapsReactsButtons() {\n    this.CAPSReactsButtons.forEach((btn) => {\n      const btnCRB = btn;\n      for (let i = 0; i < 4; i += 1) {\n        if (!this.CAPS) {\n          btnCRB.children[i].innerText =\n            i % 2 === 0\n              ? btnCRB.children[i].innerText.toUpperCase()\n              : btnCRB.children[i].innerText.toLowerCase();\n        } else {\n          btnCRB.children[i].innerText =\n            i % 2 !== 0\n              ? btnCRB.children[i].innerText.toUpperCase()\n              : btnCRB.children[i].innerText.toLowerCase();\n        }\n      }\n    });\n    this.CAPS = !this.CAPS;\n    this.appFunctionsKeys.Caps[0].classList.toggle('active');\n  }\n\n  stopRecognizer() {\n    this.recognition.stop();\n    this.microphoneKeyButton.classList.remove('is-active');\n    this.microphoneRecordingLoader.innerText = '';\n    this.microphoneRecordingLoader.classList.remove('active');\n    const timerId = setTimeout(() => {\n      this.recognition = null;\n      clearTimeout(timerId);\n    }, 500);\n  }\n\n  startRecognizer() {\n    window.SpeechRecognition =\n      window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (window.SpeechRecognition) {\n      // eslint-disable-next-line\n      this.recognition = new SpeechRecognition();\n      this.recognition.lang = this.LANG === 'en' ? 'en' : 'ru';\n      this.recognition.continuous = true;\n      this.recognition.onresult = (event) => {\n        const result = event.results[event.resultIndex];\n        this.changeAreaNodeValue(result[0].transcript);\n      };\n      this.recognition.onend = () => {\n        this.stopRecognizer();\n      };\n      this.recognition.start();\n    } else alert('SpeechRecognition не поддерживается'); // eslint-disable-line no-alert\n  }\n\n  close() {\n    this.VKEY.classList.remove('is-open');\n  }\n\n  addAppEventListeners() {\n    // open vkey on focus\n    this.textAreaNode.addEventListener('focus', () => {\n      this.VKEY.classList.add('is-open');\n    });\n    // close vkey\n    this.VKEY.querySelector('.vkey__button-close').addEventListener(\n      'click',\n      () => {\n        this.VKEY.classList.remove('is-open');\n      }\n    );\n    // sound key on / off\n    const soundKeyButton = this.VKEY.querySelector(\n      '.vkey__button-service--audio'\n    );\n    soundKeyButton.addEventListener('click', () => {\n      soundKeyButton.classList.toggle('is-active');\n      this.SoundSetting = !this.SoundSetting;\n    });\n    // вкл / откл записи с микрофона\n    this.microphoneKeyButton = this.VKEY.querySelector(\n      '.vkey__button-service--microphone'\n    );\n    this.microphoneRecordingLoader = this.VKEY.querySelector(\n      '.vkey__recording'\n    );\n    this.microphoneKeyButton.addEventListener('click', () => {\n      if (!this.recognition) {\n        this.microphoneKeyButton.classList.add('is-active');\n        this.microphoneRecordingLoader.innerText =\n          this.LANG === 'en'\n            ? 'Speak into the microphone'\n            : 'Говорите в микрофон';\n        this.microphoneRecordingLoader.classList.add('active');\n        this.startRecognizer();\n        this.saveAreaNodeFocus();\n      } else this.stopRecognizer();\n    });\n    // подсветка вирт клав при нажатии реальной\n    document.addEventListener('keydown', (e) => {\n      if (!this.VKEY.classList.contains('is-open')) return;\n      const btn = this.VKEYBody.querySelectorAll(\n        `[data-keycode=\"${e.keyCode}\"]`\n      );\n      if (e.keyCode === 9) {\n        e.preventDefault();\n        this.setVkeyFunctionButtonsActions('Tab');\n      }\n      if (\n        btn[0].classList.contains('vkey__button-symbol') ||\n        btn[0].classList.contains('vkey__button-number')\n      ) {\n        let currentKeyboardLayout;\n        for (let i = 0; i < btn[0].children.length; i += 1) {\n          if (btn[0].children[i].innerText === e.key) {\n            currentKeyboardLayout = i;\n            break;\n          }\n        }\n        if (\n          currentKeyboardLayout &&\n          currentKeyboardLayout !== this.getCurrentKeyboardLayout()\n        ) {\n          this.LANG = currentKeyboardLayout >= 2 ? 'ru' : 'en';\n          this.VKEYBody.setAttribute(\n            'data-symbol',\n            this.getCurrentKeyboardLayout()\n          );\n        }\n      }\n      btn[0].classList.add('active');\n      if (btn[1]) btn[1].classList.add('active');\n    });\n    document.addEventListener('keyup', (e) => {\n      if (!this.VKEY.classList.contains('is-open')) return;\n      const btn = this.VKEYBody.querySelectorAll(\n        `[data-keycode=\"${e.keyCode}\"]`\n      );\n      btn[0].classList.remove('active');\n      if (btn[1]) btn[1].classList.remove('active');\n      if (e.keyCode === 17) this.CTRL = false;\n    });\n  }\n\n  getCurrentKeyboardLayout() {\n    return this.REGISTR + (this.LANG === 'en' ? 0 : 2);\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ModuleNav.scss';\nimport sprite from '../../../assets/images/sprite.svg';\nimport VKey from '../../../services/Vkey/Vkey';\n\nclass ModuleNav extends Component {\n  constructor(props) {\n    super(props);\n    const { navCurrentItems } = this.props;\n    this.state = {\n      isFull: true,\n      menuIsOpen: false,\n      nuvCurrentItems: navCurrentItems,\n      openInputDropdown: false,\n      searchCountryString: '',\n    };\n    this.handlerInput = this.handlerInput.bind(this);\n    this.getCurrentListCountries = this.getCurrentListCountries.bind(this);\n  }\n\n  componentDidMount() {\n    const { hasInput } = this.props;\n    if (hasInput) {\n      this.vkey = new VKey('#country-input');\n      this.vkey.init();\n    }\n  }\n\n  handlerInput(event) {\n    const { openInputDropdown } = this.state;\n    const searchCountryString = event.target.value;\n    this.setState({\n      searchCountryString: searchCountryString.toLowerCase(),\n    });\n    if (searchCountryString === '') {\n      this.toggleInputDropdown(false);\n    } else if (!openInputDropdown) {\n      this.toggleInputDropdown(true);\n    }\n  }\n\n  handlerInputKeyDown(event) {\n    if (event.key === 'Enter') {\n      const currentList = this.getCurrentListCountries();\n      if (currentList && currentList.length > 0)\n        this.changeCurrentCountry(currentList[0]);\n    }\n  }\n\n  getCurrentListCountries() {\n    const { searchCountryString } = this.state;\n    const { countries } = this.props;\n    return countries.filter((el) =>\n      el.country.toLowerCase().includes(searchCountryString)\n    );\n  }\n\n  toggleCurrentMenuItem(id, groupId) {\n    const { menuIsOpen, nuvCurrentItems } = this.state;\n    nuvCurrentItems[groupId] = id;\n    this.setState({\n      menuIsOpen: !menuIsOpen,\n      nuvCurrentItems,\n    });\n    const { toggleNavItem } = this.props;\n    toggleNavItem(nuvCurrentItems);\n  }\n\n  closeMenu(e) {\n    const { idx } = this.props;\n    if (!e.target.closest(`#${idx}`)) {\n      this.setState({ menuIsOpen: false });\n      window.removeEventListener('click', this.closeMenu.bind(this));\n    }\n  }\n\n  toggleMenu() {\n    const { menuIsOpen } = this.state;\n    this.setState({ menuIsOpen: !menuIsOpen });\n    if (!menuIsOpen) {\n      window.addEventListener('click', this.closeMenu.bind(this));\n    } else {\n      window.removeEventListener('click', this.closeMenu.bind(this));\n    }\n  }\n\n  toggleFullWin() {\n    const { isFull } = this.state;\n    this.setState({\n      isFull: !isFull,\n      menuIsOpen: false,\n    });\n    const { toggleFullWin } = this.props;\n    toggleFullWin(isFull);\n  }\n\n  toggleInputDropdown(data) {\n    this.setState({\n      openInputDropdown: data,\n    });\n    if (!data) {\n      this.setState({\n        searchCountryString: '',\n      });\n      this.vkey.close();\n    }\n  }\n\n  changeCurrentCountry(country) {\n    this.toggleInputDropdown(false);\n    const { cbChangeCurrentCountry } = this.props;\n    cbChangeCurrentCountry(country);\n  }\n\n  render() {\n    const {\n      isFull,\n      menuIsOpen,\n      nuvCurrentItems,\n      openInputDropdown,\n      searchCountryString,\n    } = this.state;\n    const fullIcon = isFull ? '#open-full' : '#close-full';\n    const menuWrapperClassName = menuIsOpen ? 'is-open' : '';\n    const inputDropdownClassName = openInputDropdown ? 'is-open' : '';\n    const { navItems, idx, hasInput } = this.props;\n    const menuItem = (el, id, groupId) => {\n      return (\n        <li\n          className={`module-nav__menu-item ${\n            id === nuvCurrentItems[groupId] ? 'is-current' : ''\n          }`}\n          key={`${id + 1}-${groupId + 1}`.toString()}\n        >\n          <button\n            type=\"button\"\n            onClick={this.toggleCurrentMenuItem.bind(this, id, groupId)}\n          >\n            {el}\n          </button>\n        </li>\n      );\n    };\n    const separatorItem = (id, groupId) => {\n      return (\n        <li\n          className={\n            ('module-nav__menu-item', 'module-nav__menu-item--separator')\n          }\n          key={`${id + 1}-${groupId + 1}`.toString()}\n        />\n      );\n    };\n    const createOneListInnerContent = (el, id, groupId) => {\n      return el === 'separator'\n        ? separatorItem(id, groupId)\n        : menuItem(el, id, groupId);\n    };\n    const menuOneList = (groupe, groupId) =>\n      groupe.map((el, id) => createOneListInnerContent(el, id, groupId));\n    const menuNavListsContent = navItems.map((groupe, groupId) => (\n      <ul\n        className=\"module-nav__menu-list\"\n        key={`unic-menu-list-${groupId + 1}`}\n      >\n        {menuOneList(groupe, groupId)}\n      </ul>\n    ));\n    const getListOfCountries = () => {\n      const currentList = this.getCurrentListCountries();\n      let result;\n      if (currentList.length > 0) {\n        result = currentList.map((item) => (\n          <button\n            type=\"button\"\n            className=\"module-nav__input-dropdown_item\"\n            onClick={this.changeCurrentCountry.bind(this, item)}\n            key={item.country}\n          >\n            {item.country}\n          </button>\n        ));\n      } else result = <div>No countryes found.</div>;\n      return result;\n    };\n    return (\n      <div className=\"module-nav\" id={idx}>\n        <div className={`module-nav__menu ${menuWrapperClassName}`}>\n          <div className=\"module-nav__menu-icon\">\n            <button type=\"button\" onClick={this.toggleMenu.bind(this)}>\n              <svg width=\"24\" height=\"24\">\n                <use href={`${sprite}#menu`} />\n              </svg>\n            </button>\n          </div>\n          <div className=\"module-nav__menu-dropdown\">{menuNavListsContent}</div>\n        </div>\n        {hasInput && (\n          <div className=\"module-nav__input-wrap\">\n            <input\n              type=\"test\"\n              id=\"country-input\"\n              placeholder=\"Search country\"\n              value={searchCountryString}\n              onChange={this.handlerInput}\n              onFocus={this.handlerInput}\n              onKeyDown={this.handlerInputKeyDown}\n            />\n            <div\n              className={`module-nav__input-dropdown ${inputDropdownClassName}`}\n            >\n              <div className=\"module-nav__input-dropdown_inner\">\n                {getListOfCountries()}\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"module-nav__full\">\n          <button type=\"button\" onClick={this.toggleFullWin.bind(this)}>\n            <svg width=\"24\" height=\"24\">\n              <use href={sprite + fullIcon} />\n            </svg>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nModuleNav.propTypes = {\n  toggleFullWin: PropTypes.func.isRequired,\n  navItems: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\n  toggleNavItem: PropTypes.func.isRequired,\n  navCurrentItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n  idx: PropTypes.string.isRequired,\n  countries: PropTypes.arrayOf(PropTypes.object),\n  cbChangeCurrentCountry: PropTypes.func,\n  hasInput: PropTypes.bool,\n};\n\nModuleNav.defaultProps = {\n  hasInput: false,\n  cbChangeCurrentCountry: () => {},\n  countries: [],\n};\n\nexport default ModuleNav;\n","export default {\n  cases: ['casesPerOneMillion', 'todayCases'],\n  deaths: ['deathsPerOneMillion', 'todayDeaths'],\n  recovered: ['recoveredPerOneMillion', 'todayRecovered'],\n};\n","import React from 'react';\nimport GlobalParent from '../GlobalParent/GlobalParent';\nimport './Table.scss';\nimport ModuleNav from '../../Elements/ModuleNav/ModuleNav';\nimport keys from '../../../constants/keys';\n\nclass Table extends GlobalParent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navItems: [\n        ['Cases', 'Deaths', 'Recovered'],\n        ['For the last day', 'Over the entire period'],\n        ['In absolute terms', 'Per 100 thousand population'],\n      ],\n      navCurrentItems: [0, 1, 0],\n    };\n  }\n\n  clickByCountry(country) {\n    const { toggleCurrentCountry } = this.props;\n    toggleCurrentCountry(country);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { country } = this.props;\n    if (prevProps.country !== country && country.countryInfo) {\n      const elem = document.querySelector(`#${country.countryInfo.iso3}`);\n      if (elem) elem.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  render() {\n    const { containerClassName, navItems, navCurrentItems } = this.state;\n    const { countries, country, cbChangeCurrentCountry } = this.props;\n\n    const getCurrentDataOnKeys = (item, key) => {\n      let res = 0;\n      if (navCurrentItems[1] === 1) {\n        res = navCurrentItems[2] === 0 ? item[key] : item[keys[key][0]] / 10;\n      } else {\n        res =\n          navCurrentItems[2] === 0\n            ? item[keys[key][1]]\n            : (item[keys[key][1]] / item.population) * 100000;\n      }\n      return res.toLocaleString();\n    };\n\n    const getCountryRowClassName = (nameCountry) =>\n      country.country === nameCountry ? 'is-current' : null;\n\n    const getTableContent = () => {\n      const key = navItems[0][navCurrentItems[0]].toLowerCase();\n      const keySort = key + (navCurrentItems[2] === 1 ? 'PerOneMillion' : '');\n\n      return countries\n        .sort((a, b) => b[keySort] - a[keySort])\n        .map((item) => (\n          <tr\n            id={item.countryInfo.iso3}\n            className={getCountryRowClassName(item.country)}\n            onClick={this.clickByCountry.bind(this, item)}\n            key={item.country}\n          >\n            <td>\n              <span className=\"table__flag\">\n                <img src={item.countryInfo.flag} alt=\"\" />\n              </span>\n              {item.country}\n            </td>\n            <td>{getCurrentDataOnKeys(item, key)}</td>\n          </tr>\n        ));\n    };\n\n    return (\n      <div className=\"table\">\n        <div className={`table__container ${containerClassName}`}>\n          <ModuleNav\n            navItems={navItems}\n            navCurrentItems={navCurrentItems}\n            toggleNavItem={this.toggleNavItem}\n            toggleFullWin={this.toggleContainerClassName}\n            idx=\"tableNav\"\n            countries={countries}\n            hasInput\n            cbChangeCurrentCountry={cbChangeCurrentCountry}\n          />\n          <div className=\"table__wrapper\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Country</th>\n                  <th>{navItems[0][navCurrentItems[0]]}</th>\n                </tr>\n              </thead>\n              <tbody className=\"table__body\">{getTableContent()}</tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import axios from 'axios';\n\nclass Covid19DataAPI {\n  constructor() {\n    this.covidData = axios.create({\n      baseURL: 'https://disease.sh/v3/covid-19/',\n    });\n  }\n\n  // async getStatisticPerCountry() {\n  //   const summary = await this.getSummary();\n  //   return summary.Countries;\n  // }\n\n  // async getGlobalStatistic() {\n  //   const summary = await this.getSummary();\n  //   return summary.data;\n  // }\n\n  async getSummaryWorld() {\n    const summary = await this.covidData.get('all');\n    return summary.data;\n  }\n\n  async getCountryList() {\n    const countryList = await this.covidData.get('countries?yesterday=true');\n    return countryList.data;\n  }\n\n  // async getOneCountryData(country) {\n  //   const countryData = await this.covidData.get(\n  //     `countries/${country}?strict=true`\n  //   );\n  //   return countryData.data;\n  // }\n\n  async getHistoryGlobal() {\n    const historyData = await this.covidData.get(`historical/all?lastdays=365`);\n    return historyData.data;\n  }\n\n  async getHistoryCountry(country) {\n    const historyDataCountry = await this.covidData.get(\n      `historical/${country}/?lastdays=365`\n    );\n    return historyDataCountry.data;\n  }\n}\n\nexport default Covid19DataAPI;\n","/* eslint-disable global-require */\nimport React from 'react';\nimport './Map.scss';\n// eslint-disable-next-line\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON, Circle, Tooltip, useMapEvents, Polygon} from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport euCountries from '../../../constants/counties.json';\nimport Covid19DataAPI from '../../../services/Covid19DataAPI';\nimport GlobalParent from '../GlobalParent/GlobalParent';\nimport ModuleNav from '../../Elements/ModuleNav/ModuleNav';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n// let countriesArray = [];\nconst purpleOptions = {\n  color: '#000',\n  fillColor: '#000',\n  fillOpacity: 0.3,\n  weight: 1,\n};\n\nclass Map extends GlobalParent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navItems: [['Cases', 'Deaths', 'Recovered']],\n      navCurrentItems: [0],\n      geodatas: euCountries,\n      lat: 51.881403,\n      lng: 0.918583,\n      zoom: 4,\n      countries: [],\n    };\n    this.covidDataAPI = new Covid19DataAPI();\n  }\n\n  componentDidMount() {\n    this.covidDataAPI.getCountryList().then((data) => {\n      this.setState({\n        countries: data,\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { country } = this.props;\n    if (prevProps.country !== country && country.countryInfo) {\n      this.setNewPosition(country.countryInfo.lat, country.countryInfo.long);\n    }\n  }\n\n  setNewPosition(lat, lng) {\n    this.setState({\n      lat,\n      lng,\n    });\n  }\n\n  onEachFeature = (feature, layer) => {\n    const keys = ['cases', 'deaths', 'recovered'];\n    const { countries, navCurrentItems } = this.state;\n    const key = keys[navCurrentItems[0]];\n    let data = 0;\n    let countryFocus = countries.find((el) => el.countryInfo.iso3 === feature.id);\n    if (countryFocus && countryFocus[key]) data = countryFocus[key];\n    layer.on({\n      mouseover: function (e) {\n          e.sourceTarget.setStyle({\n              fillColor: \"#db2929\",\n              fillOpacity: 0.5\n          });\n        },\n      mouseout: function (e) {\n        e.sourceTarget.setStyle({\n            fillColor: \"#000\",\n            fillOpacity: 0.3\n        });\n      }\n    });\n\n    layer.bindTooltip(\n      `${feature.properties.name}, ${key}: ${data.toLocaleString()}`,\n      {\n        direction: 'right',\n        permanent: false,\n        sticky: true,\n        offset: [10, 0],\n        className: 'leaflet-tooltip'\n      }\n    );\n  }\n\n  clickToFeature = (e) => {\n     var layer = e.target;\n     console.log(\"I clicked on \" ,layer.feature.properties.name);\n  }\n\n  render() {\n    // const position = [this.state.lat, this.state.lng];\n    const {\n      containerClassName,\n      navItems,\n      navCurrentItems,\n      countries,\n      geodatas,\n      lat,\n      lng\n    } = this.state;\n\n    const RenderCircle = () => {\n      const keysPerMillion = [\n        'casesPerOneMillion',\n        'deathsPerOneMillion',\n        'recoveredPerOneMillion',\n      ];\n      const keys = ['cases', 'deaths', 'recovered'];\n      const colors = ['rgb(83,196,214)', 'rgb(202,1,1)', 'rgb(189,19,222)'];\n      return countries.map((item) => (\n        <Circle\n          center={[item.countryInfo.lat, item.countryInfo.long]}\n          pathOptions={{\n            fillColor: colors[navCurrentItems[0]],\n            fillOpacity: 1,\n            color: colors[navCurrentItems[0]],\n          }}\n          radius={item[keysPerMillion[navCurrentItems[0]]] * 2}\n          eventHandlers={{\n            click: () => {\n              // eslint-disable-next-line no-console\n              console.log('marker clicked');\n            },\n          }}\n          key={`baloon-${item.country}`}\n        >\n          <Tooltip>\n            {item.country}\n            &nbsp;\n            {item[keys[navCurrentItems[0]]]}\n          </Tooltip>\n        </Circle>\n      ));\n    };\n\n    const renderMap = () => {\n      let res = '';\n      if (countries.length > 0) {\n        res = (\n          <MapContainer\n            center={[lat, lng]}\n            zoom={this.state.zoom}\n            scrollWheelZoom\n            style={{ width: '100%' }}\n          >\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.basemaps.cartocdn.com/light_only_labels/{z}/{x}/{y}.png\"\n            />\n            <GeoJSON\n              onEachFeature={this.onEachFeature}\n              pathOptions={purpleOptions}\n              data={geodatas}\n              />\n            <RenderCircle />\n          </MapContainer>\n        )\n      }\n      return res;\n    }\n\n    return (\n      <div className=\"map\">\n        <div className={`map__container ${containerClassName}`}>\n          <ModuleNav\n            navItems={navItems}\n            navCurrentItems={navCurrentItems}\n            toggleNavItem={this.toggleNavItem}\n            toggleFullWin={this.toggleContainerClassName}\n            idx=\"mapNav\"\n          />\n          <div id=\"map\" className=\"map__wrapper\" key={`map-wrap-${navCurrentItems[0]}-${containerClassName}-${lat}`}>\n            {renderMap()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React from 'react';\nimport './Current.scss';\nimport GlobalParent from '../GlobalParent/GlobalParent';\nimport ModuleNav from '../../Elements/ModuleNav/ModuleNav';\nimport keys from '../../../constants/keys';\n\nclass Current extends GlobalParent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navItems: [\n        ['For the last day', 'Over the entire period'],\n        ['In absolute terms', 'Per 100 thousand population'],\n      ],\n      navCurrentItems: [1, 0],\n      currentTableRows: [\n        { name: 'Total cases', key: 'cases' },\n        { name: 'Total deaths', key: 'deaths' },\n        { name: 'Total recovered', key: 'recovered' },\n      ],\n      containerClassName: '',\n    };\n  }\n\n  render() {\n    const {\n      containerClassName,\n      navItems,\n      navCurrentItems,\n      currentTableRows,\n    } = this.state;\n    const { country } = this.props;\n\n    console.log(country);\n\n    const getCurrentRow = (name, key) => {\n      const item = country.country;\n      let count = 0;\n      if (navCurrentItems[0] === 1) {\n        count = navCurrentItems[1] === 0 ? item[key] : item[keys[key][0]] / 10;\n      } else {\n        count =\n          navCurrentItems[1] === 0\n            ? item[keys[key][1]]\n            : (item[keys[key][1]] / item.population) * 100000;\n      }\n      count = count === undefined ? 0 : count;\n      return (\n        <div className=\"current__row\" key={`curr-tab-r-${key}`}>\n          {name}\n          :&nbsp;\n          <span>{count.toLocaleString()}</span>\n        </div>\n      );\n    };\n\n    const getPopulationRow = () => {\n      let result = '';\n      if (country.country.population)\n      result = (\n        <div className=\"current__row\">\n          Population :&nbsp;\n          <span>{country.country.population.toLocaleString()}</span>\n        </div>\n      );\n      return result;\n    }\n\n    const getCountryFlagRow = () => {\n      let result = '';\n      if (country.country.countryInfo)\n      result = (\n        <div className=\"current__row\">\n          <img src={country.country.countryInfo.flag} alt=\"\"/>\n        </div>\n      );\n      return result;\n    }\n\n    return (\n      <div className=\"current\">\n        <div className={`current__container ${containerClassName}`}>\n          <ModuleNav\n            navItems={navItems}\n            navCurrentItems={navCurrentItems}\n            toggleNavItem={this.toggleNavItem}\n            toggleFullWin={this.toggleContainerClassName}\n            idx=\"currentNav\"\n          />\n          <h4>{`Current data for ${country.country.country || 'World'}:`}</h4>\n          <div className=\"current__container-subtitle\">\n            {`(${navItems[0][navCurrentItems[0]].toLowerCase()} / ${navItems[1][navCurrentItems[1]].toLowerCase()})`}\n          </div>\n          <div className=\"current__table\">\n            {currentTableRows.map((row) => getCurrentRow(row.name, row.key))}\n            {getPopulationRow()}\n            {getCountryFlagRow()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Current;","export default [\n  {\n    key: 'cases',\n    label: 'Cases',\n    backgroundColor: 'rgb(83,196,214)',\n    borderColor: 'rgba(83,196,214, 0.5)',\n  },\n  {\n    key: 'deaths',\n    label: 'Deaths',\n    backgroundColor: 'rgb(202,1,1)',\n    borderColor: 'rgb(202,1,1, 0.5)',\n  },\n  {\n    key: 'recovered',\n    label: 'Recovered',\n    backgroundColor: 'rgb(189,19,222)',\n    borderColor: 'rgba(189,19,222, 0.5)',\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Charts.scss';\nimport { Bar } from '@reactchartjs/react-chart.js';\nimport GlobalParent from '../GlobalParent/GlobalParent';\nimport ModuleNav from '../../Elements/ModuleNav/ModuleNav';\nimport Current from '../Current/Current';\nimport Covid19DataAPI from '../../../services/Covid19DataAPI';\nimport keysForCharts from '../../../constants/keysForCharts';\n\nclass Charts extends GlobalParent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'Charts',\n      navItems: [['Cases', 'Deaths', 'Recovered']],\n      navCurrentItems: [0],\n      history: {\n        cases: {},\n        deaths: {},\n        recovered: {},\n      },\n    };\n    this.covidDataAPI = new Covid19DataAPI();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { country } = this.props;\n    if (prevProps.country !== country && country.countryInfo) {\n      this.covidDataAPI.getHistoryCountry(country.country).then((resp) => {\n        this.setState({\n          history: resp.timeline,\n        });\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.covidDataAPI.getHistoryGlobal().then((resp) => {\n      this.setState({\n        history: resp,\n      });\n    });\n  }\n\n  getChartData() {\n    const { navCurrentItems, history } = this.state;\n    const chartCurrentData = Object.entries(\n      history[keysForCharts[navCurrentItems[0]].key]\n    );\n    return {\n      labels: chartCurrentData.map(([date]) => date),\n      datasets: [\n        {\n          label: keysForCharts[navCurrentItems[0]].label,\n          data: chartCurrentData.map(([, value]) => value),\n          fill: false,\n          backgroundColor: keysForCharts[navCurrentItems[0]].backgroundColor,\n          borderColor: keysForCharts[navCurrentItems[0]].borderColor,\n        },\n      ],\n    };\n  }\n\n  render() {\n    const { containerClassName, navItems, navCurrentItems } = this.state;\n    const { country } = this.props;\n\n    const data = this.getChartData();\n\n    const options = {\n      tooltips: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return Intl.NumberFormat().format(tooltipItem.yLabel)\n          }\n        },\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n              callback: (label) => {\n                return Intl.NumberFormat().format(label);\n              },\n            },\n        }],\n        xAxes: [{\n          type: 'time',\n          time: {\n            tooltipFormat:'DD MMM YYYY',\n            displayFormats: {\n              day: 'MMM DD'\n            }\n          }\n        }],\n      },\n    };\n\n    const BarChart = () => (\n      <>\n        <div className=\"header\">\n          <div className=\"links\">&nbsp;</div>\n        </div>\n        <Bar data={data} options={options} />\n      </>\n    );\n\n    return (\n      <div className=\"charts\">\n        <div className={`charts__container ${containerClassName}`}>\n          <ModuleNav\n            navItems={navItems}\n            navCurrentItems={navCurrentItems}\n            toggleNavItem={this.toggleNavItem}\n            toggleFullWin={this.toggleContainerClassName}\n            idx=\"chartsNav\"\n          />\n          <h4>\n            Chart of&nbsp;\n            {keysForCharts[navCurrentItems[0]].key}\n            &nbsp;in&nbsp;\n            {country.country || 'Global Word'}\n          </h4>\n          <div className=\"charts__chart\">\n            <BarChart />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrent.propTypes = {\n  country: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default Charts;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from '../Global/Header/Header';\nimport Informer from '../Global/Informer/Informer';\nimport Table from '../Global/Table/Table';\nimport Map from '../Global/Map/Map';\nimport Current from '../Global/Current/Current';\nimport Charts from '../Global/Charts/Charts';\nimport Covid19DataAPI from '../../services/Covid19DataAPI';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: {},\n      countries: [],\n      totalCases: 0,\n      totalDeaths: 0,\n      totalRecovered: 0,\n    };\n    this.covidDataAPI = new Covid19DataAPI();\n    this.toggleCurrentCountry = this.toggleCurrentCountry.bind(this);\n  }\n\n  componentDidMount() {\n    this.covidDataAPI.getSummaryWorld().then((data) => {\n      this.setState({\n        totalDeaths: data.deaths,\n        totalCases: data.cases,\n        totalRecovered: data.recovered,\n        country: data,\n      });\n    });\n\n    this.covidDataAPI.getCountryList().then((data) => {\n      this.setState({\n        countries: data,\n      });\n    });\n  }\n\n  toggleCurrentCountry(country) {\n    this.setState({ country });\n  }\n\n  render() {\n    const {\n      totalCases,\n      totalDeaths,\n      totalRecovered,\n      country,\n      countries,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__header\">\n          <Header />\n        </div>\n        <div className=\"app__main\">\n          <div className={('app__col', 'app__col--first')}>\n            <Informer\n              totalCases={totalCases}\n              totalDeaths={totalDeaths}\n              totalRecovered={totalRecovered}\n            />\n            <Table\n              country={country}\n              countries={countries}\n              toggleCurrentCountry={this.toggleCurrentCountry}\n              cbChangeCurrentCountry={this.toggleCurrentCountry}\n            />\n          </div>\n          <div className={('app__col', 'app__col--second')}>\n            <Map country={country} />\n          </div>\n          <div className={('app__col', 'app__col--third')}>\n            <Current country={{country}} />\n            <Charts country={country} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport './assets/scss/main.scss';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/sprite.b18c11c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/rs-logo.428c3f36.svg\";"],"sourceRoot":""}